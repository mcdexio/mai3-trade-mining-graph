type User @entity {
    # user address
    id: ID!
    stackMCB: BigDecimal!
    totalFee: BigDecimal!
    totalEarnMCB: BigDecimal!
    paidMCB: BigDecimal!
    paidBlock: BigInt
    unPaidMCB: BigDecimal!
    tradeAccounts: [TradeAccount!] @derivedFrom(field:"user")
}

type TradeMiningDayData @entity {
    # pool + "-" + timeindex
    id: ID!
    timestamp: Int!
    pool: String!
    poolName: String
    token: String!
    minedAmount: BigDecimal!
    minedValueUSD: BigDecimal!
}

type LiquidityPool @entity {
    # pool address
    id: ID!
    collateralAddress: String!
    tradeAccounts: [TradeAccount!] @derivedFrom(field:"pool")
}

type TradeAccount @entity {
    # pool address + "-" + user address
    id: ID!
    user: User!
    pool: LiquidityPool!
    tradeVolume: BigDecimal!
    tradeVolumeUSD: BigDecimal!
    totalFee: BigDecimal!
    totalFeeUSD: BigDecimal!
    earnMCB: BigDecimal!
}

type PriceBucket @entity {
    # token address
    id: ID!
    price: BigDecimal!
    timestamp: BigInt!
}

type UniswapPriceBucket @entity {
    # uniswap pool id
    id: ID!
    priceAvgHour: BigDecimal!
    hourTimestamp: Int!
    timestampLast: Int!
    priceLast: BigDecimal!
    accPt: BigDecimal!
    accT: BigDecimal!
}

type MarkPrice @entity {
    id: ID!
    price: BigDecimal!
    timestamp: Int!
    oracle: String!
}